from airflow import DAG
from airflow.operators.python import PythonOperator
from datetime import datetime
import random

default_args = {
    'owner': 'eddierednic',
    'start_date': datetime(2025, 10, 28),
}

# DAG
dag = DAG(
    'xcom_ex_ti',
    default_args=default_args,
    schedule_interval='@daily',
    catchup=False
)

# Task 1: Python task that prints and generates random number
def task_one(ti):
    print("Starting the DAG workflow...")
    ti.xcom_push(key="rng", value=random.randint(0, 10))

first_task = PythonOperator(
    task_id='first_task',
    python_callable=task_one,
    dag=dag,
)

# Task 2: Multiply the number
def multiply_numbers(ti):
    number_from_task_one = ti.xcom_pull(task_ids='first_task', key='rng')
    result = number_from_task_one * number_from_task_one
    ti.xcom_push(key='multi_result', value=result)

second_task = PythonOperator(
    task_id='multiplication_task',
    python_callable=multiply_numbers,
    dag=dag,
)

# Task 3: Print the results
def print_results(ti):
    number = ti.xcom_pull(task_ids='first_task', key='rng')
    result = ti.xcom_pull(task_ids='multiplication_task', key='multi_result')
    print("Number generated by first task:", number)
    print("Result of computation by second task:", result)

third_task = PythonOperator(
    task_id='print_task',
    python_callable=print_results,
    dag=dag,
)

# Define task order
first_task >> second_task >> third_task
